{"version":3,"sources":["logo.svg","constants/index.js","components/uielements/svg/users.js","components/button.jsx","components/card.jsx","components/Main.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","buttons","red","type","className","score","id","black","twoNine","jqka","ka","a","joker","low","high","cards","name","Users","react_default","createElement","width","height","viewBox","version","xmlns","xlink","stroke","strokeWidth","fill","fillRule","transform","d","Button","props","data","click","disabled","onClick","users","Card","leave","reveal","x","Main","state","totalMoney","betAmmount","bet","card","disable","updateTimer","error","cardReveal","flip","cardsArray","lowRange","lowProbability","lowMulti","highRange","highProbability","highMulti","setBet","_this","setState","clearAll","componentDidMount","changeCard","desablePredection","cardId","generateNewCard","find","setTimeout","_this$state","Object","objectSpread","isEmpty","includes","inputClear","changeRange","shift","push","console","log","n","this","e","target","value","cardNumber","lowArray","highArray","lowID","highID","i","length","concat","Math","round","_this2","_this$state2","Main_TimerHooks","onChange","inputChange","addBet","multiBet","map","index","components_card","assign","key","uuid","components_button","Component","PureComponent","floor","random","TimerHooks","_ref","_useState","useState","_useState2","slicedToArray","time","setTime","_useState3","_useState4","init","setInit","_useState5","_useState6","interval","setIntervalHooks","_useState7","_useState8","msg","setMsg","startInterval","setInterval","preTime","useEffect","callback","clearInterval","App","Main_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a8caabb5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const buttons = {\n  red: {\n    type: 'red',\n    className: 'red',\n    score: 2.00,\n    id: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]\n  },\n  black: {\n    type: 'black',\n    className: 'black',\n    score: 2.00,\n    id: [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26]\n  },\n  twoNine: {\n    type: '2 to 9',\n    className: '',\n    score: 1.50,\n    id: [1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 17, 18, 19, 20, 21, 22]\n  },\n  jqka: {\n    type: 'J Q K A',\n    className: '',\n    score: 3.00,\n    id: [10, 11, 12, 13, 23, 24, 25, 26]\n  },\n  ka: {\n    type: 'K A',\n    className: '',\n    score: 6.00,\n    id: [12, 13, 25, 26]\n  },\n  a: {\n    type: 'A',\n    className: 'red',\n    score: 12.00,\n    id: [13, 26]\n  },\n  joker: {\n    type: 'JOKER',\n    className: 'joker',\n    score: 24.00,\n    id: [27]\n  },\n  low: {\n    type: 'LOW',\n    className: 'low',\n  },\n  high: {\n    type: 'HIGH',\n    className: 'high',\n  }\n}\n\nconst cards = [\n\n  {\n    type: 'red',\n    name: '2',\n    id: 1\n  },\n  {\n    type: 'red',\n    name: '3',\n    id: 2\n  },\n  {\n    type: 'red',\n    name: '4',\n    id: 3\n  },\n  {\n    type: 'red',\n    name: '5',\n    id: 4\n  },\n  {\n    type: 'red',\n    name: '6',\n    id: 5\n  },\n  {\n    type: 'red',\n    name: '7',\n    id: 6\n  },\n  {\n    type: 'red',\n    name: '8',\n    id: 7\n  },\n  {\n    type: 'red',\n    name: '9',\n    id: 8\n  },\n  {\n    type: 'red',\n    name: '10',\n    id: 9\n  },\n  {\n    type: 'red',\n    name: 'J',\n    id: 10\n  },\n  {\n    type: 'red',\n    name: 'Q',\n    id: 11\n  },\n  {\n    type: 'red',\n    name: 'K',\n    id: 12\n  },\n  {\n    type: 'red',\n    name: 'A',\n    id: 13\n  },\n  {\n    type: 'black',\n    name: '2',\n    id: 14\n  },\n  {\n    type: 'black',\n    name: '3',\n    id: 15\n  },\n  {\n    type: 'black',\n    name: '4',\n    id: 16\n  },\n  {\n    type: 'black',\n    name: '5',\n    id: 17\n  },\n  {\n    type: 'black',\n    name: '6',\n    id: 18\n  },\n  {\n    type: 'black',\n    name: '7',\n    id: 19\n  },\n  {\n    type: 'black',\n    name: '8',\n    id: 20\n  },\n  {\n    type: 'black',\n    name: '9',\n    id: 21\n  },\n  {\n    type: 'black',\n    name: '10',\n    id: 22\n  },\n  {\n    type: 'black',\n    name: 'J',\n    id: 23\n  },\n  {\n    type: 'black',\n    name: 'Q',\n    id: 24\n  },\n  {\n    type: 'black',\n    name: 'K',\n    id: 25\n  },\n  {\n    type: 'black',\n    name: 'A',\n    id: 26\n  },\n  {\n    type: 'joker',\n    name: 'JOKER',\n    id: 27\n  },\n]\n\nexport { buttons, cards }\n","import React from 'react'\n\nconst Users = () => (\n  <svg\n    width='16px'\n    height='15px'\n    viewBox='0 0 16 15'\n    version='1.1'\n    xmlns='http://www.w3.org/2000/svg'\n    xlink='http://www.w3.org/1999/xlink'>\n    <g id='Page-1' stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n      <g\n        id='Artboard'\n        transform='translate(-291.000000, -572.000000)'\n        fill='#607D8B'\n        fillRule='nonzero'>\n        <g id='users' transform='translate(291.000000, 572.000000)'>\n          <path\n            d='M8.42661749,0.698939402 C8.92715259,0.26249168 9.57069832,4.26325641e-14 10.2727713,4.26325641e-14 C11.867914,4.26325641e-14 13.1609273,1.35503348 13.1609273,3.0266881 C13.1609273,4.69830863 11.867914,6.0533762 10.2727713,6.0533762 C9.57069534,6.0533762 8.92714713,5.7908823 8.42661113,5.35443125 C9.06331878,4.79924371 9.46861959,3.96257837 9.46861959,3.0266881 C9.46861959,2.09078185 9.06332148,1.25412126 8.42661749,0.698939403 Z M8.70360974,14.1170703 C10.3069802,13.8869853 11.2166328,13.4176744 11.2900176,13.3788629 L11.4832815,13.2760616 L11.503649,13.2762662 L11.503649,10.1347066 C11.503649,8.21981192 10.1710432,6.62467231 8.42667556,6.31437418 C8.62855473,6.27846528 8.83594951,6.259763 9.04743291,6.259763 L11.4982724,6.259763 C13.537076,6.259763 15.1959567,7.99821288 15.1959567,10.1347066 L15.1959567,13.2762662 L15.1755891,13.2760616 L14.9823253,13.3788629 C14.8847824,13.4304511 13.309747,14.2426324 10.5919821,14.2426324 C10.0132405,14.2426324 9.38271162,14.2058558 8.70360974,14.1170703 Z'\n            id='Combined-Shape'\n          />\n          <path\n            d='M2.03506194,3.0266881 C2.03506194,1.35503348 3.32807525,4.26325641e-14 4.92321789,4.26325641e-14 C6.51836053,4.26325641e-14 7.81137384,1.35503348 7.81137384,3.0266881 C7.81137384,4.69830863 6.51836053,6.0533762 4.92321789,6.0533762 C3.32807525,6.0533762 2.03506194,4.69834272 2.03506194,3.0266881 Z M6.14871899,6.259763 L3.69787947,6.259763 C1.65891321,6.259763 0,7.99821288 0,10.1347066 L0,13.2764708 L0.0076784968,13.3254676 L0.214607478,13.3931494 C2.16013034,14.03004 3.85096136,14.2426324 5.24242862,14.2426324 C7.96019352,14.2426324 9.53522891,13.4304511 9.63277184,13.3788629 L9.8260357,13.2760616 L9.84640324,13.2762662 L9.84640324,10.1347066 C9.84640324,7.99821288 8.18752257,6.259763 6.14871899,6.259763 Z'\n            id='Shape'\n          />\n        </g>\n      </g>\n    </g>\n  </svg>\n)\n\nexport default Users\n","import React from 'react'\nimport Users from './uielements/svg/users'\n\nconst Button = props => {\n  const { data, click, disabled, id } = props\n  return (\n    <div\n      className={\n        'card-detail ' + (data.id === id ? ' selected ' : ' ') +\n        (disabled ? (data.id === id ? '' : ' disableBtn ') : ' ') +\n        data.className\n      }\n      onClick={() => (disabled ? null : click(data))}>\n      <h4 className='data-title'>{data.type}</h4>\n      <div className='range-data'>\n        <span>{data.score} x</span>\n        <div className='counting'>\n          <Users />\n          <span>0</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Button\n","import React from 'react'\n\n\n\nconst Card = props => (\n  <div className={props.leave && props.reveal ? 'flip-box-inner leave' :\n    props.reveal ? 'flip-box-inner revealed' : props.leave ? 'flip-box-inner leave' : 'flip-box-inner'}>\n    <div className={'card ' + props.type}>\n      <div className='card-number top-number '>\n        <span> {props.name} </span>\n      </div>\n      <div className='card-img'>\n        <svg\n          className='gd-icon'\n          xmlns='http://www.w3.org/2000/svg'\n          xlink='http://www.w3.org/1999/xlink'\n          viewBox='0 0 590 590'>\n          <defs>\n            <rect id='SVGID_1_' x='.3' width='90' height='90' />\n          </defs>\n          <path\n            className='st0'\n            d='M548.2,295c0,97-54.7,181.2-134.9,223.6v-87.1V315.2l50.6-50.6v-67.4v-33.7h-50.6h-8.4v33.7h-67.4v-33.7h-84.3 v33.7h-67.4v-33.7h-8.4h-50.6v33.7v67.4l50.6,50.6v116.3v87.1C97.1,476.3,42.4,392,42.4,295c0-139.7,113.2-252.9,252.9-252.9 C434.9,42.1,548.2,155.4,548.2,295 M253.1,338.8c0-23.3,18.9-42.1,42.1-42.1c23.3,0,42.1,18.9,42.1,42.1v84.3h-84.3V338.8 L253.1,338.8z M590.3,295c0-162.9-132.1-295-295-295C132.4,0,0.3,132.1,0.3,295s132.1,295,295,295C458.2,590,590.3,457.9,590.3,295'\n          />\n        </svg>\n      </div>\n      <div className='card-number bottom-number'>\n        <span> {props.name} </span>\n      </div>\n    </div>\n    <div className='cardbackside'>\n    </div>\n  </div>\n)\n\nexport default Card\n","import React, { Component, PureComponent, useState, useEffect } from 'react'\nimport { buttons, cards } from '../constants'\nimport { isEmpty } from 'ramda'\nimport Users from './uielements/svg/users'\nimport Button from './button'\nimport Card from './card'\nimport uuid from 'uuid/v4';\n\nexport default class Main extends Component {\n  state = {\n    totalMoney: 1000,\n    betAmmount: 0,\n    bet: {},\n    card: {},\n    disable: true,\n    updateTimer: false,\n    error: false,\n    leave: false,\n    cardReveal: false,\n    flip: false,\n    cardsArray: [\n      {\n        type: 'red',\n        name: '2',\n        id: 1\n      },\n      {\n        type: 'red',\n        name: '3',\n        id: 2\n      },\n      {\n        type: 'red',\n        name: '4',\n        id: 3\n      },\n      {\n        type: 'red',\n        name: '5',\n        id: 4\n      },\n      {\n        type: 'red',\n        name: '6',\n        id: 5\n      }\n    ],\n    low: {\n      lowRange: \" \",\n      lowProbability: \"\",\n      lowMulti: \" \",\n      id: []\n    },\n    high: {\n      highRange: \" \",\n      highProbability: \"\",\n      highMulti: \" \",\n      id: []\n    }\n\n  }\n\n  setBet = bet => {\n    this.setState({ bet })\n  }\n\n  // clear all bet and all\n  clearAll = () => { }\n\n  componentDidMount = () => {\n    this.changeCard()\n  }\n\n  desablePredection = () => {\n    this.setState({ disable: true })\n  }\n  addBet(n) {\n    let betAmmount = this.state.betAmmount + n;\n    if (this.state.totalMoney >= betAmmount) {\n      this.setState({ betAmmount: betAmmount })\n      this.setState({ error: false })\n    }\n    else {\n      this.setState({ error: true })\n    }\n  }\n  multiBet(n) {\n    let betAmmount = this.state.betAmmount * n;\n    if (this.state.totalMoney >= betAmmount) {\n      this.setState({ betAmmount: betAmmount })\n      this.setState({ error: false })\n    }\n    else {\n      this.setState({ error: true })\n    }\n  }\n\n  inputChange(e) {\n    if (this.state.totalMoney >= e.target.value) {\n      this.setState({ betAmmount: e.target.value })\n      this.setState({ error: false })\n    }\n    else {\n      this.setState({ error: true })\n    }\n  }\n  inputClear() {\n    if (this.state.totalMoney >= 100) {\n      this.setState({ betAmmount: 100 })\n    } else {\n      this.setState({ betAmmount: 0 })\n    }\n  }\n\n  changeCard = () => {\n    this.setState({ cardReveal: true })\n\n    // Generating new card\n    const cardId = generateNewCard();\n    const card = cards.find(card => card.id === cardId)\n\n    let cardsArray = this.state.cardsArray;\n\n    cardsArray[0].leave = true;\n    cardsArray[0].reveal = true;\n\n    cardsArray[1].type = card.type;\n    cardsArray[1].name = card.name;\n    cardsArray[1].id = card.id;\n\n    setTimeout(() => {\n      cardsArray[1].reveal = true;\n    }, 1);\n\n    this.setState({\n      cardsArray: cardsArray\n    })\n\n    // calculate the betting ammount\n    let { betAmmount, bet, totalMoney } = { ...this.state }\n    if (!isEmpty(bet) && betAmmount !== 0) {\n      let score = null\n      if (bet.id.includes(card.id)) {\n        // win\n        score = totalMoney + betAmmount * bet.score\n      } else {\n        //lose\n        score = totalMoney - betAmmount\n      }\n      this.setState({ totalMoney: score })\n    }\n\n    this.inputClear();\n\n    this.changeRange(card.name);\n    // disable all buttons & clear prediction\n    this.setState({ card, disable: false, bet: {} })\n\n\n    setTimeout(() => {\n      cardsArray.shift();\n      cardsArray.push({\n        type: 'red',\n        name: '6',\n        id: 5\n      })\n      this.setState({ cardsArray: cardsArray });\n      cardsArray[0].reveal = false;\n      console.log(cardsArray);\n    }, 200);\n  }\n\n\n\n  changeRange(cardNumber) {\n    const cards = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"]\n    let low = true;\n    const lowArray = [];\n    const highArray = [];\n    const lowID = [];\n    const highID = [];\n\n    for (let i = 0; i < 13; i++) {\n      if (cardNumber != cards[i]) {\n        if (low) {\n          lowArray.push(cards[i])\n          lowID.push(i + 1);\n          lowID.push(i + 14);\n        } else {\n          highArray.push(cards[i])\n          highID.push(i + 1);\n          highID.push(i + 14);\n        }\n      } else {\n        low = false;\n      }\n    }\n\n\n    let lowRange = lowArray.length ? lowArray.length != 1 ? `${lowArray[0]}-${lowArray[lowArray.length - 1]}` : `${lowArray[0]}` : '';\n    let highRange = highArray.length ? highArray.length != 1 ? ` ${highArray[0]}-${highArray[highArray.length - 1]}` : `${highArray[0]}` : '';\n    let lowProbability = lowArray.length ? `${Math.round(lowArray.length * 7.40)}%` : '';\n    let highProbability = highArray.length ? `${Math.round(highArray.length * 7.40)}%` : '';\n    let lowMulti = lowArray.length ? `${Math.round(13 / lowArray.length * 100) / 100}x` : '';\n    let highMulti = highArray.length ? `${Math.round(13 / highArray.length * 100) / 100}x` : '';\n\n    buttons.low.id = lowID;\n    buttons.low.score = lowArray.length ? Math.round(13 / lowArray.length * 100) / 100 : 0;\n    buttons.high.id = highID;\n    buttons.high.score = highArray.length ? Math.round(13 / highArray.length * 100) / 100 : 0;\n    this.setState({ lowRange: lowRange, highRange: highRange, lowProbability: lowProbability, highProbability: highProbability, lowMulti: lowMulti, highMulti: highMulti });\n  }\n\n  render() {\n    console.log(this.state.card)\n    console.log(this.state.leave)\n    const { disable, error, highRange, lowRange, lowProbability, highProbability, lowMulti, highMulti, cardsArray, leave, cardReveal } = this.state\n    return (\n      <section>\n        <div className='container'>\n          <div className='timer-hooks'>\n            <div className='money-field'> Money: {this.state.totalMoney} </div>\n            <TimerHooks\n              changeCard={this.changeCard}\n              desablePredection={this.desablePredection}\n            />\n          </div>\n          <div className='card-wrapper'>\n            <div className='card-content left-content'>\n              <div\n                className={\n                  'higher-content' + (buttons.high.id === this.state.bet.id ? ' selected ' : ' ') +\n                  (disable ? (buttons.high.id === this.state.bet.id ? '' : ' disableBtn ') : ' ')\n                }\n                onClick={() => (disable ? null : this.setBet(buttons.high))}>\n                <h4 className='data-title'>HI</h4>\n                <div className='range-data'>\n                  <span>{highProbability}</span>\n                  <span className='range'>{highRange}</span>\n                  <span>{highMulti}</span>\n                </div>\n                <span className='top-shade' />\n                {/* <div className='arrow'>\n                  <svg\n                    width='84px'\n                    height='58px'\n                    viewBox='0 0 84 58'\n                    version='1.1'\n                    xmlns='http://www.w3.org/2000/svg'\n                    xlink='http://www.w3.org/1999/xlink'>\n                    <g\n                      id='Page-1'\n                      stroke='none'\n                      strokeWidth='1'\n                      fill='none'\n                      fillRule='evenodd'>\n                      <g\n                        id='Artboard'\n                        transform='translate(-148.000000, -532.000000)'\n                        fill='#97A8AF'>\n                        <path\n                          d='M193.174425,534.140555 L231.067477,583.566274 C232.411586,585.319461 232.079964,587.830316 230.326777,589.174425 C229.62843,589.709825 228.773019,590 227.893051,590 L152.106949,590 C149.89781,590 148.106949,588.209139 148.106949,586 C148.106949,585.120033 148.397123,584.264622 148.932523,583.566274 L186.825575,534.140555 C188.169684,532.387368 190.680539,532.055746 192.433726,533.399856 C192.712027,533.61322 192.961062,533.862254 193.174425,534.140555 Z'\n                          id='arrow'\n                        />\n                      </g>\n                    </g>\n                  </svg>\n                </div> */}\n                <div className='counting'>\n                  <svg\n                    width='16px'\n                    height='15px'\n                    viewBox='0 0 16 15'\n                    version='1.1'\n                    xmlns='http://www.w3.org/2000/svg'\n                    xlink='http://www.w3.org/1999/xlink'>\n                    <g\n                      id='Page-1'\n                      stroke='none'\n                      strokeWidth='1'\n                      fill='none'\n                      fillRule='evenodd'>\n                      <g\n                        id='Artboard'\n                        transform='translate(-291.000000, -572.000000)'\n                        fill='#607D8B'\n                        fillRule='nonzero'>\n                        <g\n                          id='users'\n                          transform='translate(291.000000, 572.000000)'>\n                          <path\n                            d='M8.42661749,0.698939402 C8.92715259,0.26249168 9.57069832,4.26325641e-14 10.2727713,4.26325641e-14 C11.867914,4.26325641e-14 13.1609273,1.35503348 13.1609273,3.0266881 C13.1609273,4.69830863 11.867914,6.0533762 10.2727713,6.0533762 C9.57069534,6.0533762 8.92714713,5.7908823 8.42661113,5.35443125 C9.06331878,4.79924371 9.46861959,3.96257837 9.46861959,3.0266881 C9.46861959,2.09078185 9.06332148,1.25412126 8.42661749,0.698939403 Z M8.70360974,14.1170703 C10.3069802,13.8869853 11.2166328,13.4176744 11.2900176,13.3788629 L11.4832815,13.2760616 L11.503649,13.2762662 L11.503649,10.1347066 C11.503649,8.21981192 10.1710432,6.62467231 8.42667556,6.31437418 C8.62855473,6.27846528 8.83594951,6.259763 9.04743291,6.259763 L11.4982724,6.259763 C13.537076,6.259763 15.1959567,7.99821288 15.1959567,10.1347066 L15.1959567,13.2762662 L15.1755891,13.2760616 L14.9823253,13.3788629 C14.8847824,13.4304511 13.309747,14.2426324 10.5919821,14.2426324 C10.0132405,14.2426324 9.38271162,14.2058558 8.70360974,14.1170703 Z'\n                            id='Combined-Shape'\n                          />\n                          <path\n                            d='M2.03506194,3.0266881 C2.03506194,1.35503348 3.32807525,4.26325641e-14 4.92321789,4.26325641e-14 C6.51836053,4.26325641e-14 7.81137384,1.35503348 7.81137384,3.0266881 C7.81137384,4.69830863 6.51836053,6.0533762 4.92321789,6.0533762 C3.32807525,6.0533762 2.03506194,4.69834272 2.03506194,3.0266881 Z M6.14871899,6.259763 L3.69787947,6.259763 C1.65891321,6.259763 0,7.99821288 0,10.1347066 L0,13.2764708 L0.0076784968,13.3254676 L0.214607478,13.3931494 C2.16013034,14.03004 3.85096136,14.2426324 5.24242862,14.2426324 C7.96019352,14.2426324 9.53522891,13.4304511 9.63277184,13.3788629 L9.8260357,13.2760616 L9.84640324,13.2762662 L9.84640324,10.1347066 C9.84640324,7.99821288 8.18752257,6.259763 6.14871899,6.259763 Z'\n                            id='Shape'\n                          />\n                        </g>\n                      </g>\n                    </g>\n                  </svg>\n                  <span>0</span>\n                </div>\n              </div>\n              <div className='bet-content'>\n                <span className='bet-title'>Your bet</span>\n                <div className='input-field'>\n                  <input\n                    value={this.state.betAmmount}\n                    onChange={e => this.inputChange(e)}\n\n                  />\n                  <div className='clear-btn' onClick={() => this.inputClear()}>CLEAR</div>\n                </div>\n                {error && <p className=\"error\">You can't bet more then your blance</p>}\n\n                <div className='btn-wrapper'>\n                  <button className='bet-btn' onClick={() => this.addBet(1000)}>+1K</button>\n                  <button className='bet-btn' onClick={() => this.addBet(10000)}>+10K</button>\n                  <button className='bet-btn' onClick={() => this.multiBet(1 / 2)}>1/2</button>\n                  <button className='bet-btn' onClick={() => this.multiBet(2)}>x2</button>\n                </div>\n              </div>\n              <div\n                className={\n                  'higher-content lower-content' + (buttons.low.id === this.state.bet.id ? ' selected ' : ' ') +\n                  (disable ? (buttons.low.id === this.state.bet.id ? '' : ' disableBtn ') : ' ')\n                }\n                onClick={() => (disable ? null : this.setBet(buttons.low))}>\n                <p className='data-title'>LO</p>\n                <div className='range-data'>\n                  <span>{lowProbability}</span>\n                  <span className='range'>{lowRange}</span>\n                  <span>{lowMulti}</span>\n                </div>\n                <span className='top-shade' />\n                <div className='counting'>\n                  <svg\n                    width='16px'\n                    height='15px'\n                    viewBox='0 0 16 15'\n                    version='1.1'\n                    xmlns='http://www.w3.org/2000/svg'\n                    xlink='http://www.w3.org/1999/xlink'>\n                    <g\n                      id='Page-1'\n                      stroke='none'\n                      strokeWidth='1'\n                      fill='none'\n                      fillRule='evenodd'>\n                      <g\n                        id='Artboard'\n                        transform='translate(-291.000000, -572.000000)'\n                        fill='#607D8B'\n                        fillRule='nonzero'>\n                        <g\n                          id='users'\n                          transform='translate(291.000000, 572.000000)'>\n                          <path\n                            d='M8.42661749,0.698939402 C8.92715259,0.26249168 9.57069832,4.26325641e-14 10.2727713,4.26325641e-14 C11.867914,4.26325641e-14 13.1609273,1.35503348 13.1609273,3.0266881 C13.1609273,4.69830863 11.867914,6.0533762 10.2727713,6.0533762 C9.57069534,6.0533762 8.92714713,5.7908823 8.42661113,5.35443125 C9.06331878,4.79924371 9.46861959,3.96257837 9.46861959,3.0266881 C9.46861959,2.09078185 9.06332148,1.25412126 8.42661749,0.698939403 Z M8.70360974,14.1170703 C10.3069802,13.8869853 11.2166328,13.4176744 11.2900176,13.3788629 L11.4832815,13.2760616 L11.503649,13.2762662 L11.503649,10.1347066 C11.503649,8.21981192 10.1710432,6.62467231 8.42667556,6.31437418 C8.62855473,6.27846528 8.83594951,6.259763 9.04743291,6.259763 L11.4982724,6.259763 C13.537076,6.259763 15.1959567,7.99821288 15.1959567,10.1347066 L15.1959567,13.2762662 L15.1755891,13.2760616 L14.9823253,13.3788629 C14.8847824,13.4304511 13.309747,14.2426324 10.5919821,14.2426324 C10.0132405,14.2426324 9.38271162,14.2058558 8.70360974,14.1170703 Z'\n                            id='Combined-Shape'\n                          />\n                          <path\n                            d='M2.03506194,3.0266881 C2.03506194,1.35503348 3.32807525,4.26325641e-14 4.92321789,4.26325641e-14 C6.51836053,4.26325641e-14 7.81137384,1.35503348 7.81137384,3.0266881 C7.81137384,4.69830863 6.51836053,6.0533762 4.92321789,6.0533762 C3.32807525,6.0533762 2.03506194,4.69834272 2.03506194,3.0266881 Z M6.14871899,6.259763 L3.69787947,6.259763 C1.65891321,6.259763 0,7.99821288 0,10.1347066 L0,13.2764708 L0.0076784968,13.3254676 L0.214607478,13.3931494 C2.16013034,14.03004 3.85096136,14.2426324 5.24242862,14.2426324 C7.96019352,14.2426324 9.53522891,13.4304511 9.63277184,13.3788629 L9.8260357,13.2760616 L9.84640324,13.2762662 L9.84640324,10.1347066 C9.84640324,7.99821288 8.18752257,6.259763 6.14871899,6.259763 Z'\n                            id='Shape'\n                          />\n                        </g>\n                      </g>\n                    </g>\n                  </svg>\n                  <span>0</span>\n                </div>\n                {/* <div className='arrow'>\n                  <svg\n                    width='84px'\n                    height='58px'\n                    viewBox='0 0 84 58'\n                    version='1.1'\n                    xmlns='http://www.w3.org/2000/svg'\n                    xlink='http://www.w3.org/1999/xlink'>\n                    <g\n                      id='Page-1'\n                      stroke='none'\n                      strokeWidth='1'\n                      fill='none'\n                      fillRule='evenodd'>\n                      <g\n                        id='Artboard'\n                        transform='translate(-148.000000, -532.000000)'\n                        fill='#97A8AF'>\n                        <path\n                          d='M193.174425,534.140555 L231.067477,583.566274 C232.411586,585.319461 232.079964,587.830316 230.326777,589.174425 C229.62843,589.709825 228.773019,590 227.893051,590 L152.106949,590 C149.89781,590 148.106949,588.209139 148.106949,586 C148.106949,585.120033 148.397123,584.264622 148.932523,583.566274 L186.825575,534.140555 C188.169684,532.387368 190.680539,532.055746 192.433726,533.399856 C192.712027,533.61322 192.961062,533.862254 193.174425,534.140555 Z'\n                          id='arrow'\n                        />\n                      </g>\n                    </g>\n                  </svg>\n                </div> */}\n              </div>\n            </div>\n            <div className='card-content center-content' >\n              {cardsArray.map((card, index) => (\n                <Card key={uuid()} {...card} />\n              ))}\n              {/* <Card {...this.state.card} /> */}\n              {/* <div className='backCard'></div>\n              <div className='backCard n1'></div>\n              <div className='backCard n2'></div>\n              <div className='backCard n3'></div>\n              <div className='backCard n4'></div> */}\n            </div>\n\n            {/* <div style={{ width: '80%' }}>\n              <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                <div>\n                  <TimerHooks\n                    changeCard={this.changeCard}\n                    desablePredection={this.desablePredection}\n                  />\n                </div>\n                <div style={{ color: this.state.card.type }}>\n                  card:{this.state.card.name}\n                </div>\n                <div> prediction: {this.state.bet.type} </div>\n                <div> money: {this.state.totalMoney} </div>\n                <div>\n                  amount :\n                  <input\n                    style={{ width: '25px' }}\n                    value={this.state.betAmmount}\n                    onChange={e =>\n                      this.setState({ betAmmount: e.target.value })}\n                  />\n                </div>\n              </div>\n              <div style={{ display: 'flex', paddingTop: '50px' }}>\n                {options.map(option => (\n                  <span key={option.type} style={{ padding: '10px' }}>\n                    <button\n                      onClick={() => this.setBet(option)}\n                      disabled={this.state.disable}>\n                      {option.type}\n                    </button>\n                    <div>x{option.score}</div>\n                  </span>\n                ))}\n              </div>\n            </div>\n          \n           */}\n            <div className='card-content right-content'>\n              <Button\n                data={buttons.red}\n                click={this.setBet}\n                disabled={disable}\n                id={this.state.bet.id}\n              />\n              <Button\n                data={buttons.black}\n                click={this.setBet}\n                disabled={disable}\n                id={this.state.bet.id}\n              />\n              <Button\n                data={buttons.twoNine}\n                click={this.setBet}\n                id={this.state.bet.id}\n                disabled={disable}\n              />\n              <Button\n                data={buttons.jqka}\n                id={this.state.bet.id}\n                click={this.setBet}\n                disabled={disable}\n              />\n              <div className='card-mask'>\n                <Button\n                  id={this.state.bet.id}\n                  data={buttons.ka}\n                  click={this.setBet}\n                  disabled={disable}\n                />\n                <Button\n                  id={this.state.bet.id}\n                  data={buttons.a}\n                  click={this.setBet}\n                  disabled={disable}\n                />\n              </div>\n              <Button\n                data={buttons.joker}\n                id={this.state.bet.id}\n                click={this.setBet}\n                disabled={disable}\n              />\n            </div>\n          </div>\n        </div>\n      </section >\n    )\n  }\n}\n\nclass Timer extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      time: 0\n    }\n    this.interval = null\n  }\n\n  componentDidUpdate = () => {\n    // console.log(generateNewCard())\n    if (this.state.time === 10) {\n      this.clearInterval()\n      this.startBreak(this.startInterval)\n    }\n  }\n\n  clearInterval = () => {\n    clearInterval(this.interval)\n  }\n\n  startBreak = callback => {\n    this.props.changeCard()\n    setTimeout(() => {\n      callback()\n    }, 5000)\n  }\n\n  startInterval = () => {\n    this.setState({ time: 0 })\n    this.interval = setInterval(() => {\n      let time = ++this.state.time\n      this.setState({ time })\n      this.forceUpdate()\n    }, 1000)\n  }\n\n  componentWillReceiveProps = props => {\n    console.log(props)\n  }\n\n  componentDidMount = () => {\n    this.startInterval()\n  }\n\n  componentWillUnmount = () => {\n    this.clearInterval()\n  }\n\n  render() {\n    return <div>{this.state.time}</div>\n  }\n}\n\nconst generateNewCard = () => Math.floor(Math.random() * 27) + 1\n\nconst TimerHooks = ({ changeCard, desablePredection }) => {\n  const [time, setTime] = useState(1)\n  const [init, setInit] = useState(true)\n  let [interval, setIntervalHooks] = useState(null)\n  const [msg, setMsg] = useState(false)\n  const startInterval = () => {\n    let interval = setInterval(() => {\n      setTime(preTime => preTime + 1)\n    }, 1000)\n    setIntervalHooks(interval)\n  }\n  const clearIntervalFn = () => {\n    setTime(1)\n    clearInterval(interval)\n  }\n\n  const startBreak = callback => {\n    changeCard()\n    setMsg(true)\n    setTimeout(() => {\n      setMsg(false)\n      desablePredection()\n      callback()\n    }, 5000)\n  }\n  useEffect(\n    () => {\n      if (init) {\n        startInterval()\n        setInit(false)\n      }\n      if (time === 11) {\n        clearIntervalFn()\n        startBreak(startInterval)\n      }\n    },\n    [time]\n  )\n\n  return (\n    <div className='timer-field' >\n      <span>timer:</span>{msg ? 'GOOD LUCK!' : <div className='count'><div className='count-number'>{time}</div><div className='count-animation'></div></div>}\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Main from './components/Main';\n\nclass App extends Component {\n  render() {\n    return (\n    <Main /> \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}